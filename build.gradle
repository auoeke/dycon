plugins {
	id("java")
	id("signing")
	id("maven-publish")
	id("net.auoeke.gronk").version("3.+")
}

version("0.0.3")

final javacProject = project(":dycon-javac")

allprojects {
	plugins.tap {
		apply("java")
		apply("signing")
		apply("maven-publish")
		apply("net.auoeke.gronk")
	}

	group("net.auoeke")
	description("ldc intrinsics inspired by JEP 303")

	gronk {
		uncheck()
	}

	repositories {
		mavenCentral()
	}
}

if (!Boolean.getBoolean("idea.sync.active")) {
	javaVersion(11)
	javacProject.javaVersion(17)
}

dependencies {
	testAnnotationProcessor(javacProject)
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

compileTestJava {
	outputs.upToDateWhen {false}
}

test {
    useJUnitPlatform()
}

configure([this, javacProject]) {
	java {
		withJavadocJar()
	}

	publishing {
		repositories {
			mavenLocal()

			maven(findProperty("maven.repository")) {
				username(findProperty("maven.username"))
				password(findProperty("maven.password"))
			}
		}

		publications.withType(MavenPublication) {
			pom {
				url.set("https://github.com/auoeke/dycon")

				licenses {
					license {
						url.set("https://github.com/auoeke/dycon/blob/master/LICENSE.md")
					}
				}

				developers {
					developer {
						id.set("auoeke")
						email.set("tjmnkrajyej@gmail.com")
					}
				}

				scm {
					connection.set("scm:git:git://github.com/auoeke/dycon.git")
					developerConnection.set("scm:git:git://github.com/auoeke/dycon.git")
					url.set("https://github.com/auoeke/dycon/tree/master")
				}
			}
		}
	}
}
