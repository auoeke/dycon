plugins {
	id("com.github.johnrengelman.shadow")
}

version("0.1.0")

dependencies {
	implementation("net.auoeke:reflect")
}

gronk {
	export(sourceSets.main, com.sun.source.util.Plugin.module.packages.collect {"jdk.compiler/$it" as String})
}

shadowJar {
	assemble.dependsOn(it)

	archiveAppendix.set(archiveClassifier.get())
	archiveClassifier.set(null)

	relocate("net.auoeke.reflect", "net.auoeke.dycon.reflect")
	relocate("net.auoeke.result", "net.auoeke.dycon.result")
	relocate("net.gudenau.lib.unsafe", "net.auoeke.dycon.unsafe")
}

components.java {
	withVariantsFromConfiguration(configurations.shadowRuntimeElements) {
		skip()
	}
}

publishing {
	publications {
		main(MavenPublication) {
			from(components.java)
		}

		fat(MavenPublication) {
			shadow.component(it)

			groupId(project.group)
			artifactId("$project.name-" + shadowJar.archiveAppendix.get())
			version(project.version)

			artifact(sourcesJar)
			artifact(javadocJar)
		}
	}
}
